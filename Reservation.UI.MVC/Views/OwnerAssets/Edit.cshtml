@model Reservation.DATA.EF.OwnerAsset

@{
    ViewBag.Title = "Edit Account Information";
}

@if (User.IsInRole("User") || User.IsInRole("Admin"))
{
    using (Html.BeginForm("Edit", "OwnerAssets", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="cdeContainer">
            <br />
            <h2>@ViewBag.Title</h2>
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.OwnerAssetId)
                @Html.HiddenFor(model => model.OwnerId)

                <div class="form-group">
                    @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
                    </div>
                </div>



                @*<div class="form-group">
            @Html.LabelFor(model => model.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
            </div>
        </div>*@
                <div class="form-group">
                    <p>
                        <img src="~/Content/images/@Model.AssetPhoto" alt="Photo of @Model.AssetName" />
                    </p>
                    <p>
                        <strong>Please Select A Photo: </strong><input name="image" id="input" type="file" />
                    </p>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SpecialNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SpecialNotes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpecialNotes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="clearfix"></div>
                    <div class="FooterLeft">
                        <input type="submit" value="Save" class="btn btn-primary rounded" />
                    </div>
                    <div class="FooterRight">@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger rounded" })</div>
                    <div class="clearfix"></div>
                </div>
                <br />
            </div>
        </div>
    }
}

else if (User.IsInRole("Employee"))
{
    using (Html.BeginForm("Edit", "OwnerAssets", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OwnerAssetId)
        @Html.HiddenFor(model => model.AssetName)
        @Html.HiddenFor(model => model.OwnerId)
        @Html.HiddenFor(model => model.AssetPhoto)
        @Html.HiddenFor(model => model.IsActive)
        @Html.HiddenFor(model => model.DateAdded)
        @Html.HiddenFor(model => model.Relationship)
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.SpecialNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SpecialNotes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SpecialNotes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary rounded" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
